#!/bin/bash

set -e -x

REPOS="
  github.com/cloudfoundry-incubator/buildpacker
  github.com/cloudfoundry-incubator/linux-circus
  github.com/cloudfoundry-incubator/warden-linux
"

BUILDPACKS="
  go-buildpack
"

DEV_GOPATH=$(cd $HOME/go && pwd)
TMP_GOPATH=/tmp/buildpacker

mkdir -p ${TMP_GOPATH}

cp $(dirname $0)/.drone.yml ${TMP_GOPATH}/.drone.yml
cp $(dirname $0)/build.yml ${TMP_GOPATH}/build.yml

go test -c
rm buildpacker.test

pushd $TMP_GOPATH
  # make sure we have all our dependencies (any version)
  go get $(for repo in $REPOS; do echo -n " $repo/..."; done)

  # pull in their packages into the temporary gopath, using godep so that
  # it'll only fetch the packages that are used (not entire repos)
  godep save $(for repo in $REPOS; do echo -n " $repo/..."; done)
  rsync --del --exclude '.*' -a Godeps/_workspace/src/ src/
  rm -rf Godeps
popd

function copy_to_gopath {
  mkdir -p ${TMP_GOPATH}/src/${1}
  rsync --del --exclude '.*' --exclude '*.test' -a ${DEV_GOPATH}/src/${1}/ ${TMP_GOPATH}/src/${1}/
}

function compile_and_copy_buildpack {
  mkdir -p ${TMP_GOPATH}/buildpacks/${1}
  ~/workspace/${1}/bin/package offline --use-cache
  mv ~/workspace/${1}/*.zip ${TMP_GOPATH}/buildpacks/${1}/
}

# grab and set up our components
for package in $REPOS; do
  copy_to_gopath $package &
done


rsync --del --exclude '.*' -a ~/workspace/loggregator/ ${TMP_GOPATH}/loggregator/ &

# compile buildpacks

for buildpack in $BUILDPACKS; do
  compile_and_copy_buildpack $buildpack &
done

wait

cd $TMP_GOPATH

if [ -n "$GLIDER_URL" ]; then
  fly -- bogus-argv-0 "$@"
else
  drone -privileged build
fi
